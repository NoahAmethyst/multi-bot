// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: scaleswap.proto

package scaleswap_pb

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/timestamp.proto.

type Timestamp = timestamppb.Timestamp

type ScaleSwapQuizCallbackType int32

const (
	ScaleSwapQuizCallbackType_ScaleCorrectUser ScaleSwapQuizCallbackType = 0
	ScaleSwapQuizCallbackType_ScaleStop        ScaleSwapQuizCallbackType = 1
	ScaleSwapQuizCallbackType_ScaleGenerate    ScaleSwapQuizCallbackType = 2
)

// Enum value maps for ScaleSwapQuizCallbackType.
var (
	ScaleSwapQuizCallbackType_name = map[int32]string{
		0: "ScaleCorrectUser",
		1: "ScaleStop",
		2: "ScaleGenerate",
	}
	ScaleSwapQuizCallbackType_value = map[string]int32{
		"ScaleCorrectUser": 0,
		"ScaleStop":        1,
		"ScaleGenerate":    2,
	}
)

func (x ScaleSwapQuizCallbackType) Enum() *ScaleSwapQuizCallbackType {
	p := new(ScaleSwapQuizCallbackType)
	*p = x
	return p
}

func (x ScaleSwapQuizCallbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScaleSwapQuizCallbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_scaleswap_proto_enumTypes[0].Descriptor()
}

func (ScaleSwapQuizCallbackType) Type() protoreflect.EnumType {
	return &file_scaleswap_proto_enumTypes[0]
}

func (x ScaleSwapQuizCallbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScaleSwapQuizCallbackType.Descriptor instead.
func (ScaleSwapQuizCallbackType) EnumDescriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{0}
}

type QuizStatus int32

const (
	QuizStatus_PREPARE QuizStatus = 0
	QuizStatus_PENDING QuizStatus = 1
	QuizStatus_OVER    QuizStatus = 2
)

// Enum value maps for QuizStatus.
var (
	QuizStatus_name = map[int32]string{
		0: "PREPARE",
		1: "PENDING",
		2: "OVER",
	}
	QuizStatus_value = map[string]int32{
		"PREPARE": 0,
		"PENDING": 1,
		"OVER":    2,
	}
)

func (x QuizStatus) Enum() *QuizStatus {
	p := new(QuizStatus)
	*p = x
	return p
}

func (x QuizStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuizStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scaleswap_proto_enumTypes[1].Descriptor()
}

func (QuizStatus) Type() protoreflect.EnumType {
	return &file_scaleswap_proto_enumTypes[1]
}

func (x QuizStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuizStatus.Descriptor instead.
func (QuizStatus) EnumDescriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{1}
}

type ScaleSwapCreateQuizReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId  string `protobuf:"bytes,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	GroupId int64  `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	AppId   string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ScaleSwapCreateQuizReq) Reset() {
	*x = ScaleSwapCreateQuizReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleSwapCreateQuizReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSwapCreateQuizReq) ProtoMessage() {}

func (x *ScaleSwapCreateQuizReq) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSwapCreateQuizReq.ProtoReflect.Descriptor instead.
func (*ScaleSwapCreateQuizReq) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{0}
}

func (x *ScaleSwapCreateQuizReq) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *ScaleSwapCreateQuizReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ScaleSwapCreateQuizReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type ScaleSwapQuizCallbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId       string                    `protobuf:"bytes,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	OpenId       int64                     `protobuf:"varint,2,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	GroupId      int64                     `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	AppId        string                    `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppType      int32                     `protobuf:"varint,6,opt,name=app_type,json=appType,proto3" json:"app_type,omitempty"`
	CallbackType ScaleSwapQuizCallbackType `protobuf:"varint,3,opt,name=callback_type,json=callbackType,proto3,enum=proto.ScaleSwapQuizCallbackType" json:"callback_type,omitempty"`
}

func (x *ScaleSwapQuizCallbackReq) Reset() {
	*x = ScaleSwapQuizCallbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleSwapQuizCallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSwapQuizCallbackReq) ProtoMessage() {}

func (x *ScaleSwapQuizCallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSwapQuizCallbackReq.ProtoReflect.Descriptor instead.
func (*ScaleSwapQuizCallbackReq) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{1}
}

func (x *ScaleSwapQuizCallbackReq) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *ScaleSwapQuizCallbackReq) GetOpenId() int64 {
	if x != nil {
		return x.OpenId
	}
	return 0
}

func (x *ScaleSwapQuizCallbackReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ScaleSwapQuizCallbackReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ScaleSwapQuizCallbackReq) GetAppType() int32 {
	if x != nil {
		return x.AppType
	}
	return 0
}

func (x *ScaleSwapQuizCallbackReq) GetCallbackType() ScaleSwapQuizCallbackType {
	if x != nil {
		return x.CallbackType
	}
	return ScaleSwapQuizCallbackType_ScaleCorrectUser
}

type ScaleSwapErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Detail  string `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ScaleSwapErrorMessage) Reset() {
	*x = ScaleSwapErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleSwapErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSwapErrorMessage) ProtoMessage() {}

func (x *ScaleSwapErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSwapErrorMessage.ProtoReflect.Descriptor instead.
func (*ScaleSwapErrorMessage) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{2}
}

func (x *ScaleSwapErrorMessage) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ScaleSwapErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ScaleSwapErrorMessage) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type ScaleCommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ScaleSwapErrorMessage `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ScaleCommonResp) Reset() {
	*x = ScaleCommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleCommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleCommonResp) ProtoMessage() {}

func (x *ScaleCommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleCommonResp.ProtoReflect.Descriptor instead.
func (*ScaleCommonResp) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{3}
}

func (x *ScaleCommonResp) GetError() *ScaleSwapErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

type GetAppConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *GetAppConfigReq) Reset() {
	*x = GetAppConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigReq) ProtoMessage() {}

func (x *GetAppConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigReq.ProtoReflect.Descriptor instead.
func (*GetAppConfigReq) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{4}
}

func (x *GetAppConfigReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

type GetAppConfigRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainType       int64             `protobuf:"varint,1,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty"`
	ChainId         int64             `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ChainName       string            `protobuf:"bytes,3,opt,name=chain_name,json=chainName,proto3" json:"chain_name,omitempty"`
	ContractAddress map[string]string `protobuf:"bytes,4,rep,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetAppConfigRespData) Reset() {
	*x = GetAppConfigRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigRespData) ProtoMessage() {}

func (x *GetAppConfigRespData) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigRespData.ProtoReflect.Descriptor instead.
func (*GetAppConfigRespData) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppConfigRespData) GetChainType() int64 {
	if x != nil {
		return x.ChainType
	}
	return 0
}

func (x *GetAppConfigRespData) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *GetAppConfigRespData) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *GetAppConfigRespData) GetContractAddress() map[string]string {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

type GetAppConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ScaleSwapErrorMessage `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *GetAppConfigRespData  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAppConfigResp) Reset() {
	*x = GetAppConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppConfigResp) ProtoMessage() {}

func (x *GetAppConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppConfigResp.ProtoReflect.Descriptor instead.
func (*GetAppConfigResp) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppConfigResp) GetError() *ScaleSwapErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAppConfigResp) GetData() *GetAppConfigRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ScaleSwapGetUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	AppId   string   `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Address []string `protobuf:"bytes,3,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *ScaleSwapGetUsersReq) Reset() {
	*x = ScaleSwapGetUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleSwapGetUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSwapGetUsersReq) ProtoMessage() {}

func (x *ScaleSwapGetUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSwapGetUsersReq.ProtoReflect.Descriptor instead.
func (*ScaleSwapGetUsersReq) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{7}
}

func (x *ScaleSwapGetUsersReq) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ScaleSwapGetUsersReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ScaleSwapGetUsersReq) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type ScaleSwapGetUsersRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users map[string]*TgUser `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ScaleSwapGetUsersRespData) Reset() {
	*x = ScaleSwapGetUsersRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleSwapGetUsersRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSwapGetUsersRespData) ProtoMessage() {}

func (x *ScaleSwapGetUsersRespData) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSwapGetUsersRespData.ProtoReflect.Descriptor instead.
func (*ScaleSwapGetUsersRespData) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{8}
}

func (x *ScaleSwapGetUsersRespData) GetUsers() map[string]*TgUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type TgUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TgUser) Reset() {
	*x = TgUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TgUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TgUser) ProtoMessage() {}

func (x *TgUser) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TgUser.ProtoReflect.Descriptor instead.
func (*TgUser) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{9}
}

func (x *TgUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ScaleSwapGetUsersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ScaleSwapErrorMessage     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *ScaleSwapGetUsersRespData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ScaleSwapGetUsersResp) Reset() {
	*x = ScaleSwapGetUsersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScaleSwapGetUsersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleSwapGetUsersResp) ProtoMessage() {}

func (x *ScaleSwapGetUsersResp) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleSwapGetUsersResp.ProtoReflect.Descriptor instead.
func (*ScaleSwapGetUsersResp) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{10}
}

func (x *ScaleSwapGetUsersResp) GetError() *ScaleSwapErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ScaleSwapGetUsersResp) GetData() *ScaleSwapGetUsersRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetQuizGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizIds []string `protobuf:"bytes,1,rep,name=quiz_ids,json=quizIds,proto3" json:"quiz_ids,omitempty"`
}

func (x *GetQuizGroupReq) Reset() {
	*x = GetQuizGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuizGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizGroupReq) ProtoMessage() {}

func (x *GetQuizGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizGroupReq.ProtoReflect.Descriptor instead.
func (*GetQuizGroupReq) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{11}
}

func (x *GetQuizGroupReq) GetQuizIds() []string {
	if x != nil {
		return x.QuizIds
	}
	return nil
}

type GetQuizGroupRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizGroup map[string]int64 `protobuf:"bytes,1,rep,name=quiz_group,json=quizGroup,proto3" json:"quiz_group,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetQuizGroupRespData) Reset() {
	*x = GetQuizGroupRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuizGroupRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizGroupRespData) ProtoMessage() {}

func (x *GetQuizGroupRespData) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizGroupRespData.ProtoReflect.Descriptor instead.
func (*GetQuizGroupRespData) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{12}
}

func (x *GetQuizGroupRespData) GetQuizGroup() map[string]int64 {
	if x != nil {
		return x.QuizGroup
	}
	return nil
}

type GetQuizGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ScaleSwapErrorMessage `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *GetQuizGroupRespData  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetQuizGroupResp) Reset() {
	*x = GetQuizGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuizGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizGroupResp) ProtoMessage() {}

func (x *GetQuizGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizGroupResp.ProtoReflect.Descriptor instead.
func (*GetQuizGroupResp) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{13}
}

func (x *GetQuizGroupResp) GetError() *ScaleSwapErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetQuizGroupResp) GetData() *GetQuizGroupRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReloadReq) Reset() {
	*x = ReloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadReq) ProtoMessage() {}

func (x *ReloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadReq.ProtoReflect.Descriptor instead.
func (*ReloadReq) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{14}
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChainType int64  `protobuf:"varint,2,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty"`
	ChainId   int64  `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Address   string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{15}
}

func (x *Contract) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Contract) GetChainType() int64 {
	if x != nil {
		return x.ChainType
	}
	return 0
}

func (x *Contract) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Contract) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contract) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type Quiz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GroupId int64      `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	AppId   string     `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Status  QuizStatus `protobuf:"varint,5,opt,name=status,proto3,enum=proto.QuizStatus" json:"status,omitempty"`
}

func (x *Quiz) Reset() {
	*x = Quiz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quiz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quiz) ProtoMessage() {}

func (x *Quiz) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quiz.ProtoReflect.Descriptor instead.
func (*Quiz) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{16}
}

func (x *Quiz) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Quiz) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Quiz) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Quiz) GetStatus() QuizStatus {
	if x != nil {
		return x.Status
	}
	return QuizStatus_PREPARE
}

type Admin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address         string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ContractAddress string `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	SecretKey       string `protobuf:"bytes,4,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
}

func (x *Admin) Reset() {
	*x = Admin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Admin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Admin) ProtoMessage() {}

func (x *Admin) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Admin.ProtoReflect.Descriptor instead.
func (*Admin) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{17}
}

func (x *Admin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Admin) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Admin) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Admin) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type AddressMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	OpenId  int64  `protobuf:"varint,2,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
}

func (x *AddressMap) Reset() {
	*x = AddressMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressMap) ProtoMessage() {}

func (x *AddressMap) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressMap.ProtoReflect.Descriptor instead.
func (*AddressMap) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{18}
}

func (x *AddressMap) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressMap) GetOpenId() int64 {
	if x != nil {
		return x.OpenId
	}
	return 0
}

type Inductee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId  string `protobuf:"bytes,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Inductee) Reset() {
	*x = Inductee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inductee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inductee) ProtoMessage() {}

func (x *Inductee) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inductee.ProtoReflect.Descriptor instead.
func (*Inductee) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{19}
}

func (x *Inductee) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *Inductee) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AppPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ChainId   int64  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	ChainType int64  `protobuf:"varint,3,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty"`
}

func (x *AppPreference) Reset() {
	*x = AppPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scaleswap_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPreference) ProtoMessage() {}

func (x *AppPreference) ProtoReflect() protoreflect.Message {
	mi := &file_scaleswap_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPreference.ProtoReflect.Descriptor instead.
func (*AppPreference) Descriptor() ([]byte, []int) {
	return file_scaleswap_proto_rawDescGZIP(), []int{20}
}

func (x *AppPreference) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AppPreference) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *AppPreference) GetChainType() int64 {
	if x != nil {
		return x.ChainType
	}
	return 0
}

var File_scaleswap_proto protoreflect.FileDescriptor

var file_scaleswap_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x16, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x53, 0x77, 0x61, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xe0, 0x01, 0x0a,
	0x18, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x51, 0x75, 0x69, 0x7a, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x75, 0x69,
	0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61,
	0x70, 0x51, 0x75, 0x69, 0x7a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x5d, 0x0a, 0x15, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x45,
	0x0a, 0x0f, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77,
	0x61, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x28, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22,
	0x90, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x5b, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x42,
	0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x77, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x14, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xa7, 0x01, 0x0a, 0x19, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x1a, 0x47, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1c, 0x0a, 0x06, 0x54, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77,
	0x61, 0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x49, 0x0a, 0x0a, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x71, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x3c, 0x0a,
	0x0e, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x77, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69,
	0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x0b, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x22, 0x82, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x73, 0x0a, 0x04, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7b, 0x0a, 0x05, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x3f, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4d, 0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x08, 0x49, 0x6e, 0x64,
	0x75, 0x63, 0x74, 0x65, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x60, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x53, 0x0a, 0x19, 0x53, 0x63,
	0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x51, 0x75, 0x69, 0x7a, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x55, 0x73, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x10, 0x02, 0x2a,
	0x30, 0x0a, 0x0a, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x56, 0x45, 0x52, 0x10,
	0x02, 0x32, 0x80, 0x05, 0x0a, 0x10, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x15, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x51, 0x75, 0x69, 0x7a, 0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61,
	0x70, 0x51, 0x75, 0x69, 0x7a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x22, 0x18, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x2f, 0x71, 0x75, 0x69,
	0x7a, 0x2f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x6f, 0x0a,
	0x13, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61,
	0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x2f,
	0x71, 0x75, 0x69, 0x7a, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x62,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x53,
	0x77, 0x61, 0x70, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0x66, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x22, 0x15, 0x2f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x2f, 0x61, 0x70, 0x70,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x53, 0x77, 0x61, 0x70, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x50, 0x0a, 0x06, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11,
	0x2f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x77, 0x61, 0x70, 0x2f, 0x72, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x3a, 0x01, 0x2a, 0x42, 0x1c, 0x5a, 0x1a, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x77, 0x61,
	0x70, 0x5f, 0x70, 0x62, 0x2f, 0x3b, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x77, 0x61, 0x70, 0x5f,
	0x70, 0x62, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scaleswap_proto_rawDescOnce sync.Once
	file_scaleswap_proto_rawDescData = file_scaleswap_proto_rawDesc
)

func file_scaleswap_proto_rawDescGZIP() []byte {
	file_scaleswap_proto_rawDescOnce.Do(func() {
		file_scaleswap_proto_rawDescData = protoimpl.X.CompressGZIP(file_scaleswap_proto_rawDescData)
	})
	return file_scaleswap_proto_rawDescData
}

var file_scaleswap_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_scaleswap_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_scaleswap_proto_goTypes = []interface{}{
	(ScaleSwapQuizCallbackType)(0),    // 0: proto.ScaleSwapQuizCallbackType
	(QuizStatus)(0),                   // 1: proto.QuizStatus
	(*ScaleSwapCreateQuizReq)(nil),    // 2: proto.ScaleSwapCreateQuizReq
	(*ScaleSwapQuizCallbackReq)(nil),  // 3: proto.ScaleSwapQuizCallbackReq
	(*ScaleSwapErrorMessage)(nil),     // 4: proto.ScaleSwapErrorMessage
	(*ScaleCommonResp)(nil),           // 5: proto.ScaleCommonResp
	(*GetAppConfigReq)(nil),           // 6: proto.GetAppConfigReq
	(*GetAppConfigRespData)(nil),      // 7: proto.GetAppConfigRespData
	(*GetAppConfigResp)(nil),          // 8: proto.GetAppConfigResp
	(*ScaleSwapGetUsersReq)(nil),      // 9: proto.ScaleSwapGetUsersReq
	(*ScaleSwapGetUsersRespData)(nil), // 10: proto.ScaleSwapGetUsersRespData
	(*TgUser)(nil),                    // 11: proto.TgUser
	(*ScaleSwapGetUsersResp)(nil),     // 12: proto.ScaleSwapGetUsersResp
	(*GetQuizGroupReq)(nil),           // 13: proto.GetQuizGroupReq
	(*GetQuizGroupRespData)(nil),      // 14: proto.GetQuizGroupRespData
	(*GetQuizGroupResp)(nil),          // 15: proto.GetQuizGroupResp
	(*ReloadReq)(nil),                 // 16: proto.ReloadReq
	(*Contract)(nil),                  // 17: proto.Contract
	(*Quiz)(nil),                      // 18: proto.Quiz
	(*Admin)(nil),                     // 19: proto.Admin
	(*AddressMap)(nil),                // 20: proto.AddressMap
	(*Inductee)(nil),                  // 21: proto.Inductee
	(*AppPreference)(nil),             // 22: proto.AppPreference
	nil,                               // 23: proto.GetAppConfigRespData.ContractAddressEntry
	nil,                               // 24: proto.ScaleSwapGetUsersRespData.UsersEntry
	nil,                               // 25: proto.GetQuizGroupRespData.QuizGroupEntry
}
var file_scaleswap_proto_depIdxs = []int32{
	0,  // 0: proto.ScaleSwapQuizCallbackReq.callback_type:type_name -> proto.ScaleSwapQuizCallbackType
	4,  // 1: proto.ScaleCommonResp.error:type_name -> proto.ScaleSwapErrorMessage
	23, // 2: proto.GetAppConfigRespData.contract_address:type_name -> proto.GetAppConfigRespData.ContractAddressEntry
	4,  // 3: proto.GetAppConfigResp.error:type_name -> proto.ScaleSwapErrorMessage
	7,  // 4: proto.GetAppConfigResp.data:type_name -> proto.GetAppConfigRespData
	24, // 5: proto.ScaleSwapGetUsersRespData.users:type_name -> proto.ScaleSwapGetUsersRespData.UsersEntry
	4,  // 6: proto.ScaleSwapGetUsersResp.error:type_name -> proto.ScaleSwapErrorMessage
	10, // 7: proto.ScaleSwapGetUsersResp.data:type_name -> proto.ScaleSwapGetUsersRespData
	25, // 8: proto.GetQuizGroupRespData.quiz_group:type_name -> proto.GetQuizGroupRespData.QuizGroupEntry
	4,  // 9: proto.GetQuizGroupResp.error:type_name -> proto.ScaleSwapErrorMessage
	14, // 10: proto.GetQuizGroupResp.data:type_name -> proto.GetQuizGroupRespData
	1,  // 11: proto.Quiz.status:type_name -> proto.QuizStatus
	11, // 12: proto.ScaleSwapGetUsersRespData.UsersEntry.value:type_name -> proto.TgUser
	3,  // 13: proto.ScaleSwapService.ScaleSwapQuizCallBack:input_type -> proto.ScaleSwapQuizCallbackReq
	2,  // 14: proto.ScaleSwapService.ScaleSwapCreateQuiz:input_type -> proto.ScaleSwapCreateQuizReq
	13, // 15: proto.ScaleSwapService.GetQuizGroup:input_type -> proto.GetQuizGroupReq
	6,  // 16: proto.ScaleSwapService.GetAppChainConfig:input_type -> proto.GetAppConfigReq
	9,  // 17: proto.ScaleSwapService.GetUsers:input_type -> proto.ScaleSwapGetUsersReq
	16, // 18: proto.ScaleSwapService.Reload:input_type -> proto.ReloadReq
	5,  // 19: proto.ScaleSwapService.ScaleSwapQuizCallBack:output_type -> proto.ScaleCommonResp
	5,  // 20: proto.ScaleSwapService.ScaleSwapCreateQuiz:output_type -> proto.ScaleCommonResp
	15, // 21: proto.ScaleSwapService.GetQuizGroup:output_type -> proto.GetQuizGroupResp
	8,  // 22: proto.ScaleSwapService.GetAppChainConfig:output_type -> proto.GetAppConfigResp
	12, // 23: proto.ScaleSwapService.GetUsers:output_type -> proto.ScaleSwapGetUsersResp
	5,  // 24: proto.ScaleSwapService.Reload:output_type -> proto.ScaleCommonResp
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_scaleswap_proto_init() }
func file_scaleswap_proto_init() {
	if File_scaleswap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scaleswap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleSwapCreateQuizReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleSwapQuizCallbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleSwapErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleCommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleSwapGetUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleSwapGetUsersRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TgUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScaleSwapGetUsersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuizGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuizGroupRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuizGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quiz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Admin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inductee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scaleswap_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scaleswap_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scaleswap_proto_goTypes,
		DependencyIndexes: file_scaleswap_proto_depIdxs,
		EnumInfos:         file_scaleswap_proto_enumTypes,
		MessageInfos:      file_scaleswap_proto_msgTypes,
	}.Build()
	File_scaleswap_proto = out.File
	file_scaleswap_proto_rawDesc = nil
	file_scaleswap_proto_goTypes = nil
	file_scaleswap_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ScaleSwapServiceClient is the client API for ScaleSwapService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScaleSwapServiceClient interface {
	ScaleSwapQuizCallBack(ctx context.Context, in *ScaleSwapQuizCallbackReq, opts ...grpc.CallOption) (*ScaleCommonResp, error)
	ScaleSwapCreateQuiz(ctx context.Context, in *ScaleSwapCreateQuizReq, opts ...grpc.CallOption) (*ScaleCommonResp, error)
	GetQuizGroup(ctx context.Context, in *GetQuizGroupReq, opts ...grpc.CallOption) (*GetQuizGroupResp, error)
	GetAppChainConfig(ctx context.Context, in *GetAppConfigReq, opts ...grpc.CallOption) (*GetAppConfigResp, error)
	GetUsers(ctx context.Context, in *ScaleSwapGetUsersReq, opts ...grpc.CallOption) (*ScaleSwapGetUsersResp, error)
	Reload(ctx context.Context, in *ReloadReq, opts ...grpc.CallOption) (*ScaleCommonResp, error)
}

type scaleSwapServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewScaleSwapServiceClient(cc grpc.ClientConnInterface) ScaleSwapServiceClient {
	return &scaleSwapServiceClient{cc}
}

func (c *scaleSwapServiceClient) ScaleSwapQuizCallBack(ctx context.Context, in *ScaleSwapQuizCallbackReq, opts ...grpc.CallOption) (*ScaleCommonResp, error) {
	out := new(ScaleCommonResp)
	err := c.cc.Invoke(ctx, "/proto.ScaleSwapService/ScaleSwapQuizCallBack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scaleSwapServiceClient) ScaleSwapCreateQuiz(ctx context.Context, in *ScaleSwapCreateQuizReq, opts ...grpc.CallOption) (*ScaleCommonResp, error) {
	out := new(ScaleCommonResp)
	err := c.cc.Invoke(ctx, "/proto.ScaleSwapService/ScaleSwapCreateQuiz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scaleSwapServiceClient) GetQuizGroup(ctx context.Context, in *GetQuizGroupReq, opts ...grpc.CallOption) (*GetQuizGroupResp, error) {
	out := new(GetQuizGroupResp)
	err := c.cc.Invoke(ctx, "/proto.ScaleSwapService/GetQuizGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scaleSwapServiceClient) GetAppChainConfig(ctx context.Context, in *GetAppConfigReq, opts ...grpc.CallOption) (*GetAppConfigResp, error) {
	out := new(GetAppConfigResp)
	err := c.cc.Invoke(ctx, "/proto.ScaleSwapService/GetAppChainConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scaleSwapServiceClient) GetUsers(ctx context.Context, in *ScaleSwapGetUsersReq, opts ...grpc.CallOption) (*ScaleSwapGetUsersResp, error) {
	out := new(ScaleSwapGetUsersResp)
	err := c.cc.Invoke(ctx, "/proto.ScaleSwapService/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scaleSwapServiceClient) Reload(ctx context.Context, in *ReloadReq, opts ...grpc.CallOption) (*ScaleCommonResp, error) {
	out := new(ScaleCommonResp)
	err := c.cc.Invoke(ctx, "/proto.ScaleSwapService/Reload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScaleSwapServiceServer is the server API for ScaleSwapService service.
type ScaleSwapServiceServer interface {
	ScaleSwapQuizCallBack(context.Context, *ScaleSwapQuizCallbackReq) (*ScaleCommonResp, error)
	ScaleSwapCreateQuiz(context.Context, *ScaleSwapCreateQuizReq) (*ScaleCommonResp, error)
	GetQuizGroup(context.Context, *GetQuizGroupReq) (*GetQuizGroupResp, error)
	GetAppChainConfig(context.Context, *GetAppConfigReq) (*GetAppConfigResp, error)
	GetUsers(context.Context, *ScaleSwapGetUsersReq) (*ScaleSwapGetUsersResp, error)
	Reload(context.Context, *ReloadReq) (*ScaleCommonResp, error)
}

// UnimplementedScaleSwapServiceServer can be embedded to have forward compatible implementations.
type UnimplementedScaleSwapServiceServer struct {
}

func (*UnimplementedScaleSwapServiceServer) ScaleSwapQuizCallBack(context.Context, *ScaleSwapQuizCallbackReq) (*ScaleCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScaleSwapQuizCallBack not implemented")
}
func (*UnimplementedScaleSwapServiceServer) ScaleSwapCreateQuiz(context.Context, *ScaleSwapCreateQuizReq) (*ScaleCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScaleSwapCreateQuiz not implemented")
}
func (*UnimplementedScaleSwapServiceServer) GetQuizGroup(context.Context, *GetQuizGroupReq) (*GetQuizGroupResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuizGroup not implemented")
}
func (*UnimplementedScaleSwapServiceServer) GetAppChainConfig(context.Context, *GetAppConfigReq) (*GetAppConfigResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppChainConfig not implemented")
}
func (*UnimplementedScaleSwapServiceServer) GetUsers(context.Context, *ScaleSwapGetUsersReq) (*ScaleSwapGetUsersResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedScaleSwapServiceServer) Reload(context.Context, *ReloadReq) (*ScaleCommonResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reload not implemented")
}

func RegisterScaleSwapServiceServer(s *grpc.Server, srv ScaleSwapServiceServer) {
	s.RegisterService(&_ScaleSwapService_serviceDesc, srv)
}

func _ScaleSwapService_ScaleSwapQuizCallBack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScaleSwapQuizCallbackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleSwapServiceServer).ScaleSwapQuizCallBack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ScaleSwapService/ScaleSwapQuizCallBack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleSwapServiceServer).ScaleSwapQuizCallBack(ctx, req.(*ScaleSwapQuizCallbackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScaleSwapService_ScaleSwapCreateQuiz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScaleSwapCreateQuizReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleSwapServiceServer).ScaleSwapCreateQuiz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ScaleSwapService/ScaleSwapCreateQuiz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleSwapServiceServer).ScaleSwapCreateQuiz(ctx, req.(*ScaleSwapCreateQuizReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScaleSwapService_GetQuizGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQuizGroupReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleSwapServiceServer).GetQuizGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ScaleSwapService/GetQuizGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleSwapServiceServer).GetQuizGroup(ctx, req.(*GetQuizGroupReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScaleSwapService_GetAppChainConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleSwapServiceServer).GetAppChainConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ScaleSwapService/GetAppChainConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleSwapServiceServer).GetAppChainConfig(ctx, req.(*GetAppConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScaleSwapService_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScaleSwapGetUsersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleSwapServiceServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ScaleSwapService/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleSwapServiceServer).GetUsers(ctx, req.(*ScaleSwapGetUsersReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ScaleSwapService_Reload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReloadReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScaleSwapServiceServer).Reload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ScaleSwapService/Reload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScaleSwapServiceServer).Reload(ctx, req.(*ReloadReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ScaleSwapService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ScaleSwapService",
	HandlerType: (*ScaleSwapServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScaleSwapQuizCallBack",
			Handler:    _ScaleSwapService_ScaleSwapQuizCallBack_Handler,
		},
		{
			MethodName: "ScaleSwapCreateQuiz",
			Handler:    _ScaleSwapService_ScaleSwapCreateQuiz_Handler,
		},
		{
			MethodName: "GetQuizGroup",
			Handler:    _ScaleSwapService_GetQuizGroup_Handler,
		},
		{
			MethodName: "GetAppChainConfig",
			Handler:    _ScaleSwapService_GetAppChainConfig_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _ScaleSwapService_GetUsers_Handler,
		},
		{
			MethodName: "Reload",
			Handler:    _ScaleSwapService_Reload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scaleswap.proto",
}
